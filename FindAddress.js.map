{"version":3,"sources":["_src/FindAddress.js"],"names":["define","template","declare","Color","lang","array","domClass","query","topic","on","dojoString","_WidgetBase","_TemplatedMixin","SimpleMarkerSymbol","Point","scaleUtils","Graphic","esriRequest","SpatialReference","templateString","baseClass","map","title","symbol","graphicsLayer","_graphic","zoomLevel","apiKey","wkid","inline","constructor","console","info","arguments","postMixInProperties","loaded","graphics","connect","setStyle","STYLE_DIAMOND","setColor","spatialReference","postCreate","formGeocode","onsubmit","add","btnGeocode","hitch","geocodeAddress","_validate","_done","publish","_geocoding","remove","address","txtAddress","value","zone","txtZone","request","cancel","_invokeWebService","street","then","geocode","url","options","replace","content","callbackParamName","that","domNode","removeClass","every","tb","_isValid","textBox","log","valid","trim","length","parentElement","onFind","_onFind","response","status","result","point","location","x","y","getLevel","centerAndZoom","getScale","extent","width","_onError","err","errorMsg"],"mappings":"AAAAA,OAAO,CACH,wCADG,EAGH,oBAHG,EAIH,kBAJG,EAKH,iBALG,EAMH,kBANG,EAQH,gBARG,EAUH,YAVG,EAWH,YAXG,EAYH,SAZG,EAaH,aAbG,EAeH,mBAfG,EAgBH,uBAhBG,EAkBH,iCAlBG,EAmBH,qBAnBG,EAoBH,0BApBG,EAqBH,cArBG,EAsBH,cAtBG,EAuBH,uBAvBG,CAAP,EAwBG,UACCC,QADD,EAGCC,OAHD,EAICC,KAJD,EAKCC,IALD,EAMCC,KAND,EAQCC,QARD,EAUCC,KAVD,EAWCC,KAXD,EAYCC,EAZD,EAaCC,UAbD,EAeCC,WAfD,EAgBCC,eAhBD,EAkBCC,kBAlBD,EAmBCC,KAnBD,EAoBCC,UApBD,EAqBCC,OArBD,EAsBCC,WAtBD,EAuBCC,gBAvBD,EAwBG;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAOhB,QAAQ,CAACS,WAAD,EAAcC,eAAd,CAAR,EAAwC;AAC3CO,wBAAgBlB,QAD2B;AAE3CmB,mBAAW,cAFgC;AAG3CC,aAAK,IAHsC;AAI3CC,eAAO,qBAJoC;AAK3CC,gBAAQ,IALmC;AAM3CC,uBAAe,IAN4B;AAO3CC,kBAAU,IAPiC;AAQ3CC,mBAAW,EARgC;AAS3CC,gBAAQ,IATmC;AAU3CC,cAAM,IAVqC;;AAY3C;AACA;AACAC,gBAAQ,IAdmC;;AAgB3CC,qBAAa,uBAAY;AACrB;AACA;AACAC,oBAAQC,IAAR,CAAa,8CAAb,EAA6DC,SAA7D;AACH,SApB0C;;AAsB3CC,6BAAqB,+BAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACAH,oBAAQC,IAAR,CAAa,sDAAb,EAAqEC,SAArE;;AAEA;AACA,gBAAI,CAAC,KAAKT,aAAN,IAAuB,CAAC,CAAE,KAAKH,GAAnC,EAAwC;AACpC;AACA,oBAAI,KAAKA,GAAL,CAASc,MAAb,EAAqB;AACjB,yBAAKX,aAAL,GAAqB,KAAKH,GAAL,CAASe,QAA9B;AACH,iBAFD,MAEO;AACH,yBAAKC,OAAL,CAAa,KAAKhB,GAAlB,EAAuB,QAAvB,EAAiC,YAAY;AACzC,6BAAKG,aAAL,GAAqB,KAAKH,GAAL,CAASe,QAA9B;AACH,qBAFD;AAGH;AACJ;;AAED;AACA,gBAAI,CAAC,KAAKb,MAAN,IAAgB,CAAC,CAAE,KAAKF,GAA5B,EAAiC;AAC7B,qBAAKE,MAAL,GAAc,IAAIV,kBAAJ,EAAd;AACA,qBAAKU,MAAL,CAAYe,QAAZ,CAAqBzB,mBAAmB0B,aAAxC;AACA,qBAAKhB,MAAL,CAAYiB,QAAZ,CAAqB,IAAIrC,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ,CAAV,CAArB;AACH;;AAED,gBAAI,CAAC,KAAKyB,IAAV,EAAgB;AACZ,qBAAKA,IAAL,GAAa,KAAKP,GAAN,GAAa,KAAKA,GAAL,CAASoB,gBAAT,CAA0Bb,IAAvC,GAA8C,KAA1D;AACH;AACJ,SArD0C;;AAuD3Cc,oBAAY,sBAAY;AACpBX,oBAAQC,IAAR,CAAa,6CAAb,EAA4DC,SAA5D;;AAEA,iBAAKU,WAAL,CAAiBC,QAAjB,GAA4B,YAAY;AACpC,uBAAO,KAAP;AACH,aAFD;;AAIA,gBAAI,KAAKf,MAAT,EAAiB;AACbvB,yBAASuC,GAAT,CAAa,KAAKF,WAAlB,EAA+B,aAA/B;AACH;;AAEDlC,eAAG,KAAKqC,UAAR,EAAoB,OAApB,EAA6B1C,KAAK2C,KAAL,CAAW,IAAX,EAAiB,gBAAjB,CAA7B;AACH,SAnE0C;AAoE3CC,wBAAgB,0BAAY;AACxB;AACA;AACAjB,oBAAQC,IAAR,CAAa,iDAAb,EAAgEC,SAAhE;;AAEA,gBAAI,CAAC,KAAKgB,SAAL,EAAL,EAAuB;AACnB,qBAAKC,KAAL;AACA,uBAAO,KAAP;AACH;;AAED1C,kBAAM2C,OAAN,CAAc,6CAAd;;AAEA,iBAAKC,UAAL;;AAEA,gBAAI,KAAK/B,GAAL,IAAY,KAAKI,QAArB,EAA+B;AAC3B,qBAAKD,aAAL,CAAmB6B,MAAnB,CAA0B,KAAK5B,QAA/B;AACH;;AAED,gBAAI6B,UAAU,KAAKC,UAAL,CAAgBC,KAA9B;AACA,gBAAIC,OAAO,KAAKC,OAAL,CAAaF,KAAxB;;AAEA,gBAAI,KAAKG,OAAT,EAAkB;AACd,qBAAKA,OAAL,CAAaC,MAAb,CAAoB,qBAApB;AACA,qBAAKD,OAAL,GAAe,IAAf;AACH;;AAED,iBAAKA,OAAL,GAAe,KAAKE,iBAAL,CAAuB;AAClCC,wBAAQR,OAD0B;AAElCG,sBAAMA;AAF4B,aAAvB,EAGZM,IAHY,CAIX3D,KAAK2C,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAJW,EAIkB3C,KAAK2C,KAAL,CAAW,IAAX,EAAiB,UAAjB,CAJlB,CAAf;;AAOA,mBAAO,KAAP;AACH,SAtG0C;;AAwG3Cc,2BAAmB,2BAAUG,OAAV,EAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjC,oBAAQC,IAAR,CAAa,oDAAb,EAAmEC,SAAnE;;AAEA,gBAAIgC,MAAM,uEAAV;;AAEA,gBAAIC,UAAU;AACVvC,wBAAQ,KAAKA,MADH;AAEVc,kCAAkB,KAAKb;AAFb,aAAd;;AAKAqC,kBAAM7D,KAAK+D,OAAL,CAAaF,GAAb,EAAkB;AACpBD,yBAASA;AADW,aAAlB,CAAN;;AAIA,mBAAO/C,YAAY;AACfgD,qBAAKA,GADU;AAEfG,yBAASF,OAFM;AAGfG,mCAAmB;AAHJ,aAAZ,CAAP;AAKH,SAnI0C;;AAqI3CpB,mBAAW,qBAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlB,oBAAQC,IAAR,CAAa,4CAAb,EAA2DC,SAA3D;;AAEA,gBAAIqC,OAAO,IAAX;;AAEA;AACA/D,kBAAM,aAAN,EAAqB,KAAKgE,OAA1B,EAAmCC,WAAnC,CAA+C,WAA/C;;AAEA,mBAAOnE,MAAMoE,KAAN,CAAY,CAAC,KAAKlB,UAAN,EAAkB,KAAKG,OAAvB,CAAZ,EAA6C,UAAUgB,EAAV,EAAc;AAC9D,uBAAOJ,KAAKK,QAAL,CAAcD,EAAd,CAAP;AACH,aAFM,CAAP;AAGH,SAxJ0C;;AA0J3CC,kBAAU,kBAAUC,OAAV,EAAmB;AACzB;AACA;AACA;AACA7C,oBAAQ8C,GAAR,CAAY,2CAAZ,EAAyD5C,SAAzD;;AAEA,gBAAI6C,QAAQpE,WAAWqE,IAAX,CAAgBH,QAAQpB,KAAxB,EAA+BwB,MAA/B,GAAwC,CAApD;;AAEA,gBAAI,CAACF,KAAL,EAAY;AACRxE,yBAASuC,GAAT,CAAa+B,QAAQK,aAArB,EAAoC,WAApC;AACH;;AAED,mBAAOH,KAAP;AACH,SAvK0C;;AAyK3C1B,oBAAY,sBAAY,CAEvB,CA3K0C;;AA6K3CF,eAAO,iBAAY,CAElB,CA/K0C;;AAiL3CgC,gBAAQ,kBAAY,CAEnB,CAnL0C;;AAqL3CC,iBAAS,iBAAUC,QAAV,EAAoB;AACzB;AACA;AACA;AACA;AACA;AACA;AACArD,oBAAQC,IAAR,CAAa,0CAAb,EAAyDC,SAAzD;;AAEA,gBAAImD,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,qBAAKH,MAAL,CAAYE,SAASE,MAArB;;AAEA,oBAAI,KAAKjE,GAAT,EAAc;AACV,wBAAIkE,QAAQ,IAAIzE,KAAJ,CACRsE,SAASE,MAAT,CAAgBE,QAAhB,CAAyBC,CADjB,EAERL,SAASE,MAAT,CAAgBE,QAAhB,CAAyBE,CAFjB,EAGR,IAAIxE,gBAAJ,CAAqB;AACjBU,8BAAM,KAAKA;AADM,qBAArB,CAHQ,CAAZ;;AAQA,wBAAI,KAAKP,GAAL,CAASsE,QAAT,KAAsB,CAAC,CAA3B,EAA8B;AAC1B,6BAAKtE,GAAL,CAASuE,aAAT,CAAuBL,KAAvB,EAA8B,KAAK7D,SAAnC;AACH,qBAFD,MAEO;AACH,6BAAKL,GAAL,CAASuE,aAAT,CACIL,KADJ,EAEIxE,WAAW8E,QAAX,CACI,KAAKxE,GAAL,CAASyE,MADb,EAEI,KAAKzE,GAAL,CAAS0E,KAFb,EAGI,KAAKnE,IAHT,IAII,KAAKF,SANb;AAQH;;AAED,yBAAKD,QAAL,GAAgB,IAAIT,OAAJ,CAAYuE,KAAZ,EAAmB,KAAKhE,MAAxB,EAAgC6D,SAASE,MAAzC,CAAhB;AACA,yBAAK9D,aAAL,CAAmBqB,GAAnB,CAAuB,KAAKpB,QAA5B;AACH;;AAED,qBAAKyB,KAAL;;AAEA1C,sBAAM2C,OAAN,CAAc,wCAAd,EAAwD,CAACiC,SAASE,MAAV,CAAxD;AACH,aAhCD,MAgCO;AACH,qBAAKU,QAAL;AACH;AACJ,SAjO0C;;AAmO3CA,kBAAU,kBAAUC,GAAV,EAAe;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlE,oBAAQC,IAAR,CAAa,2CAAb,EAA0DC,SAA1D;;AAEA3B,qBAASuC,GAAT,CAAa,KAAKqD,QAAL,CAAcjB,aAA3B,EAA0C,WAA1C;;AAEA;AACA,iBAAK/B,KAAL;;AAEA1C,kBAAM2C,OAAN,CAAc,6CAAd,EAA6D,CAAC8C,GAAD,CAA7D;AACH;AApP0C,KAAxC,CAAP;AAsPH,CAvUD","file":"FindAddress.js","sourcesContent":["define([\n    'dojo/text!./templates/FindAddress.html',\n\n    'dojo/_base/declare',\n    'dojo/_base/Color',\n    'dojo/_base/lang',\n    'dojo/_base/array',\n\n    'dojo/dom-class',\n\n    'dojo/query',\n    'dojo/topic',\n    'dojo/on',\n    'dojo/string',\n\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n\n    'esri/symbols/SimpleMarkerSymbol',\n    'esri/geometry/Point',\n    'esri/geometry/scaleUtils',\n    'esri/graphic',\n    'esri/request',\n    'esri/SpatialReference'\n], function (\n    template,\n\n    declare,\n    Color,\n    lang,\n    array,\n\n    domClass,\n\n    query,\n    topic,\n    on,\n    dojoString,\n\n    _WidgetBase,\n    _TemplatedMixin,\n\n    SimpleMarkerSymbol,\n    Point,\n    scaleUtils,\n    Graphic,\n    esriRequest,\n    SpatialReference\n    ) {\n    // description:\n    //      **Summary**: A simple form tied to the map allowing a user to quickly zoom to an address.\n    //      <p>\n    //      **Owner(s)**: Scott Davis, Steve Gourley\n    //      </p>\n    //      <p>\n    //      **Test Page**: <a href='/tests/dojo/agrc/1.0/agrc/widgets/tests/FindAddressTests.html' target='_blank'>\n    //          agrc.widgets.map.FindAddress.Tests</a>\n    //      </p>\n    //      <p>\n    //      **Description**:\n    //      This widget hits the [agrc geocoding web service](http://gis.utah.gov/web-services/address-geolocator-2).\n    //      </p>\n    //      <p>\n    //      **Published Topics**:\n    //      </p>\n    //      <ul>\n    //          <li>agrc.widgets.locate.FindAddress.OnFindStart[none]</li>\n    //          <li>agrc.widgets.locate.FindAddress.OnFind[result]</li>\n    //          <li>agrc.widgets.locate.FindAddress.OnFindError[err]</li>\n    //      </ul>\n    //      **Exceptions**:\n    //      </p>\n    //      <ul><li>none</li></ul>\n    //      <p>\n    //      **Required Files**:\n    //      </p>\n    //      <ul><li>resources/locate/FindAddress.css</li></ul>\n    //\n    // example:\n    // |    new FindAddress({map: map}, 'test1');\n\n    return declare([_WidgetBase, _TemplatedMixin], {\n        templateString: template,\n        baseClass: 'find-address',\n        map: null,\n        title: 'Find Street Address',\n        symbol: null,\n        graphicsLayer: null,\n        _graphic: null,\n        zoomLevel: 12,\n        apiKey: null,\n        wkid: null,\n\n        // inline: Boolean (optional)\n        //      Controls if form is inline or normal (default) layout\n        inline: null,\n\n        constructor: function () {\n            // summary:\n            //      first function to fire after page loads\n            console.info('agrc.widgets.locate.FindAddress::constructor', arguments);\n        },\n\n        postMixInProperties: function () {\n            // summary:\n            //      postMixin properties like symbol and graphics layer\n            // description:\n            //      decide whether to use default graphics layer and symbol\n            // tags:\n            //      public\n            console.info('agrc.widgets.locate.FindAddress::postMixInProperties', arguments);\n\n            // default to use the map's graphics layer if none was passed in\n            if (!this.graphicsLayer && !! this.map) {\n                // handle race condition\n                if (this.map.loaded) {\n                    this.graphicsLayer = this.map.graphics;\n                } else {\n                    this.connect(this.map, 'onLoad', function () {\n                        this.graphicsLayer = this.map.graphics;\n                    });\n                }\n            }\n\n            // create symbol if none was provided in options\n            if (!this.symbol && !! this.map) {\n                this.symbol = new SimpleMarkerSymbol();\n                this.symbol.setStyle(SimpleMarkerSymbol.STYLE_DIAMOND);\n                this.symbol.setColor(new Color([255, 0, 0, 0.5]));\n            }\n\n            if (!this.wkid) {\n                this.wkid = (this.map) ? this.map.spatialReference.wkid : 26912;\n            }\n        },\n\n        postCreate: function () {\n            console.info('agrc.widgets.locate.FindAddress::postCreate', arguments);\n\n            this.formGeocode.onsubmit = function () {\n                return false;\n            };\n\n            if (this.inline) {\n                domClass.add(this.formGeocode, 'form-inline');\n            }\n\n            on(this.btnGeocode, 'click', lang.hitch(this, 'geocodeAddress'));\n        },\n        geocodeAddress: function () {\n            // summary:\n            //      Geocodes the address if the text boxes validate.\n            console.info('agrc.widgets.locate.FindAddress::geocodeAddress', arguments);\n\n            if (!this._validate()) {\n                this._done();\n                return false;\n            }\n\n            topic.publish('agrc.widgets.locate.FindAddress.OnFindStart');\n\n            this._geocoding();\n\n            if (this.map && this._graphic) {\n                this.graphicsLayer.remove(this._graphic);\n            }\n\n            var address = this.txtAddress.value;\n            var zone = this.txtZone.value;\n\n            if (this.request) {\n                this.request.cancel('duplicate in flight');\n                this.request = null;\n            }\n\n            this.request = this._invokeWebService({\n                street: address,\n                zone: zone\n            }).then(\n                lang.hitch(this, '_onFind'), lang.hitch(this, '_onError')\n            );\n\n            return false;\n        },\n\n        _invokeWebService: function (geocode) {\n            // summary:\n            //      calls the web service\n            // description:\n            //      sends the request to the wsut webservice\n            // tags:\n            //      private\n            // returns:\n            //     Deferred\n            console.info('agrc.widgets.locate.FindAddress::_invokeWebService', arguments);\n\n            var url = '//api.mapserv.utah.gov/api/v1/Geocode/{geocode.street}/{geocode.zone}';\n\n            var options = {\n                apiKey: this.apiKey,\n                spatialReference: this.wkid\n            };\n\n            url = lang.replace(url, {\n                geocode: geocode\n            });\n\n            return esriRequest({\n                url: url,\n                content: options,\n                callbackParamName: 'callback'\n            });\n        },\n\n        _validate: function () {\n            // summary:\n            //      validates the widget\n            // description:\n            //      makes sure the street and zone have valid data\n            // tags:\n            //      private\n            // returns:\n            //      bool\n            console.info('agrc.widgets.locate.FindAddress::_validate', arguments);\n\n            var that = this;\n\n            // hide error messages\n            query('.form-group', this.domNode).removeClass('has-error');\n\n            return array.every([this.txtAddress, this.txtZone], function (tb) {\n                return that._isValid(tb);\n            });\n        },\n\n        _isValid: function (textBox) {\n            // summary:\n            //      validates that there are values in the textbox\n            // textBox: TextBox Element\n            console.log('agrc.widgets.locate.FindAddress::_isValid', arguments);\n\n            var valid = dojoString.trim(textBox.value).length > 0;\n\n            if (!valid) {\n                domClass.add(textBox.parentElement, 'has-error');\n            }\n\n            return valid;\n        },\n\n        _geocoding: function () {\n\n        },\n\n        _done: function () {\n\n        },\n\n        onFind: function () {\n\n        },\n\n        _onFind: function (response) {\n            // summary:\n            //      handles a successful geocode\n            // description:\n            //      zooms the map if there is one. publishes the result\n            // tags:\n            //      private\n            console.info('agrc.widgets.locate.FindAddress::_onFind', arguments);\n\n            if (response.status === 200) {\n                this.onFind(response.result);\n\n                if (this.map) {\n                    var point = new Point(\n                        response.result.location.x,\n                        response.result.location.y,\n                        new SpatialReference({\n                            wkid: this.wkid\n                        })\n                    );\n\n                    if (this.map.getLevel() > -1) {\n                        this.map.centerAndZoom(point, this.zoomLevel);\n                    } else {\n                        this.map.centerAndZoom(\n                            point,\n                            scaleUtils.getScale(\n                                this.map.extent,\n                                this.map.width,\n                                this.wkid\n                            ) / this.zoomLevel\n                        );\n                    }\n\n                    this._graphic = new Graphic(point, this.symbol, response.result);\n                    this.graphicsLayer.add(this._graphic);\n                }\n\n                this._done();\n\n                topic.publish('agrc.widgets.locate.FindAddress.OnFind', [response.result]);\n            } else {\n                this._onError();\n            }\n        },\n\n        _onError: function (err) {\n            // summary:\n            //      handles script io geocoding error\n            // description:\n            //      publishes error\n            // tags:\n            //      private\n            // returns:\n            //\n            console.info('agrc.widgets.locate.FindAddress::_onError', arguments);\n\n            domClass.add(this.errorMsg.parentElement, 'has-error');\n\n            // re-enable find button\n            this._done();\n\n            topic.publish('agrc.widgets.locate.FindAddress.OnFindError', [err]);\n        }\n    });\n});\n"]}