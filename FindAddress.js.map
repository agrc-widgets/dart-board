{"version":3,"sources":["_src/FindAddress.js"],"names":["define","_TemplatedMixin","_WidgetBase","domClass","on","query","dojoString","template","topic","array","declare","lang","esriConfig","Point","SpatialReference","Graphic","esriRequest","SimpleMarkerSymbol","defaultSpatialReference","templateString","baseClass","map","title","symbol","graphicsLayer","_graphic","zoomLevel","apiKey","wkid","inline","constructor","console","info","arguments","request","corsEnabledServers","push","postMixInProperties","mapView","graphics","style","color","when","spatialReference","postCreate","formGeocode","onsubmit","add","btnGeocode","hitch","geocodeAddress","_validate","_done","publish","_geocoding","remove","address","txtAddress","value","zone","txtZone","cancel","_invokeWebService","street","then","geocode","url","options","handleAs","that","domNode","removeClass","every","tb","_isValid","textBox","log","valid","trim","length","parentElement","onFind","_onFind","response","data","status","result","point","x","location","y","zoom","goTo","target","scale","geometry","_onError","err","errorMsg"],"mappings":"AAAAA,OAAO,CACH,uBADG,EAEH,mBAFG,EAIH,gBAJG,EAKH,SALG,EAMH,YANG,EAOH,aAPG,EAQH,kDARG,EASH,YATG,EAUH,kBAVG,EAWH,oBAXG,EAYH,iBAZG,EAcH,aAdG,EAeH,qBAfG,EAgBH,gCAhBG,EAiBH,cAjBG,EAkBH,cAlBG,EAmBH,iCAnBG,CAAP,EAoBG,UACCC,eADD,EAECC,WAFD,EAICC,QAJD,EAKCC,EALD,EAMCC,KAND,EAOCC,UAPD,EAQCC,QARD,EASCC,KATD,EAUCC,KAVD,EAWCC,OAXD,EAYCC,IAZD,EAcCC,UAdD,EAeCC,KAfD,EAgBCC,gBAhBD,EAiBCC,OAjBD,EAkBCC,WAlBD,EAmBCC,kBAnBD,EAoBD;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,0BAA0B,IAA9B;;AAEA,WAAOR,QAAQ,CAACR,WAAD,EAAcD,eAAd,CAAR,EAAwC;AAC3CkB,wBAAgBZ,QAD2B;AAE3Ca,mBAAW,cAFgC;AAG3CC,aAAK,IAHsC;AAI3CC,eAAO,qBAJoC;AAK3CC,gBAAQ,IALmC;AAM3CC,uBAAe,IAN4B;AAO3CC,kBAAU,IAPiC;AAQ3CC,mBAAW,EARgC;AAS3CC,gBAAQ,IATmC;AAU3CC,cAAM,IAVqC;;AAY3C;AACA;AACAC,gBAAQ,IAdmC;;AAgB3CC,qBAAa,uBAAY;AACrB;AACA;AACAC,oBAAQC,IAAR,CAAa,oCAAb,EAAmDC,SAAnD;;AAEArB,uBAAWsB,OAAX,CAAmBC,kBAAnB,CAAsCC,IAAtC,CAA2C,sBAA3C;AACH,SAtB0C;AAuB3CC,6BAAqB,+BAAY;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AACA;AACAN,oBAAQC,IAAR,CAAa,4CAAb,EAA2DC,SAA3D;;AAEA,gBAAI,KAAKK,OAAT,EAAkB;AACd;AACA,oBAAI,CAAC,KAAKd,aAAV,EAAyB;AACrB,yBAAKA,aAAL,GAAqB,KAAKc,OAAL,CAAaC,QAAlC;AACH;;AAED;AACA,oBAAI,CAAC,KAAKhB,MAAV,EAAkB;AACd,yBAAKA,MAAL,GAAc,IAAIN,kBAAJ,CAAuB;AACjCuB,+BAAO,SAD0B;AAEjCC,+BAAO,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ;AAF0B,qBAAvB,CAAd;AAIH;;AAED,qBAAKH,OAAL,CAAaI,IAAb,CAAkB,YAAM;AACpB,wBAAI,CAAC,MAAKd,IAAV,EAAgB;AACZ,8BAAKA,IAAL,GAAa,MAAKU,OAAN,GAAiB,MAAKA,OAAL,CAAaK,gBAAb,CAA8Bf,IAA/C,GAAsDV,uBAAlE;AACH;AACJ,iBAJD;AAKH,aAnBD,MAmBO;AACH,oBAAI,CAAC,KAAKU,IAAV,EAAgB;AACZ,yBAAKA,IAAL,GAAYV,uBAAZ;AACH;AACJ;AACJ,SAxD0C;AAyD3C0B,oBAAY,sBAAY;AACpBb,oBAAQC,IAAR,CAAa,mCAAb,EAAkDC,SAAlD;;AAEA,iBAAKY,WAAL,CAAiBC,QAAjB,GAA4B,YAAY;AACpC,uBAAO,KAAP;AACH,aAFD;;AAIA,gBAAI,KAAKjB,MAAT,EAAiB;AACb1B,yBAAS4C,GAAT,CAAa,KAAKF,WAAlB,EAA+B,aAA/B;AACH;;AAEDzC,eAAG,KAAK4C,UAAR,EAAoB,OAApB,EAA6BrC,KAAKsC,KAAL,CAAW,IAAX,EAAiB,gBAAjB,CAA7B;AACH,SArE0C;AAsE3CC,wBAAgB,0BAAY;AACxB;AACA;AACAnB,oBAAQC,IAAR,CAAa,uCAAb,EAAsDC,SAAtD;;AAEA,gBAAI,CAAC,KAAKkB,SAAL,EAAL,EAAuB;AACnB,qBAAKC,KAAL;AACA,uBAAO,KAAP;AACH;;AAED5C,kBAAM6C,OAAN,CAAc,oCAAd;;AAEA,iBAAKC,UAAL;;AAEA,gBAAI,KAAKhB,OAAL,IAAgB,KAAKb,QAAzB,EAAmC;AAC/B,qBAAKD,aAAL,CAAmB+B,MAAnB,CAA0B,KAAK9B,QAA/B;AACH;;AAED,gBAAI+B,UAAU,KAAKC,UAAL,CAAgBC,KAA9B;AACA,gBAAIC,OAAO,KAAKC,OAAL,CAAaF,KAAxB;;AAEA,gBAAI,KAAKxB,OAAT,EAAkB;AACd,qBAAKA,OAAL,CAAa2B,MAAb,CAAoB,qBAApB;AACA,qBAAK3B,OAAL,GAAe,IAAf;AACH;;AAED,iBAAKA,OAAL,GAAe,KAAK4B,iBAAL,CAAuB;AAClCC,wBAAQP,OAD0B;AAElCG,sBAAMA;AAF4B,aAAvB,EAGZK,IAHY,CAIXrD,KAAKsC,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAJW,EAIkBtC,KAAKsC,KAAL,CAAW,IAAX,EAAiB,UAAjB,CAJlB,CAAf;;AAOA,mBAAO,KAAP;AACH,SAxG0C;AAyG3Ca,2BAAmB,2BAAUG,OAAV,EAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlC,oBAAQC,IAAR,CAAa,0CAAb,EAAyDC,SAAzD;;AAEA,gBAAIiC,iDAA+CD,QAAQF,MAAvD,SAAiEE,QAAQN,IAA7E;;AAEA,gBAAIQ,UAAU;AACVxC,wBAAQ,KAAKA,MADH;AAEVgB,kCAAkB,KAAKf;AAFb,aAAd;;AAKA,mBAAOZ,YAAYkD,GAAZ,EAAiB;AACpB7D,uBAAO8D,OADa;AAEpBC,0BAAU;AAFU,aAAjB,CAAP;AAIH,SA/H0C;AAgI3CjB,mBAAW,qBAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,oBAAQC,IAAR,CAAa,kCAAb,EAAiDC,SAAjD;;AAEA,gBAAIoC,OAAO,IAAX;;AAEA;AACAhE,kBAAM,aAAN,EAAqB,KAAKiE,OAA1B,EAAmCC,WAAnC,CAA+C,WAA/C;;AAEA,mBAAO9D,MAAM+D,KAAN,CAAY,CAAC,KAAKf,UAAN,EAAkB,KAAKG,OAAvB,CAAZ,EAA6C,UAAUa,EAAV,EAAc;AAC9D,uBAAOJ,KAAKK,QAAL,CAAcD,EAAd,CAAP;AACH,aAFM,CAAP;AAGH,SAnJ0C;AAoJ3CC,kBAAU,kBAAUC,OAAV,EAAmB;AACzB;AACA;AACA;AACA5C,oBAAQ6C,GAAR,CAAY,iCAAZ,EAA+C3C,SAA/C;;AAEA,gBAAI4C,QAAQvE,WAAWwE,IAAX,CAAgBH,QAAQjB,KAAxB,EAA+BqB,MAA/B,GAAwC,CAApD;;AAEA,gBAAI,CAACF,KAAL,EAAY;AACR1E,yBAAS4C,GAAT,CAAa4B,QAAQK,aAArB,EAAoC,WAApC;AACH;;AAED,mBAAOH,KAAP;AACH,SAjK0C;AAkK3CvB,oBAAY,sBAAY,CAEvB,CApK0C;AAqK3CF,eAAO,iBAAY,CAElB,CAvK0C;AAwK3C6B,gBAAQ,kBAAY,CAEnB,CA1K0C;AA2K3CC,iBAAS,iBAAUC,QAAV,EAAoB;AACzB;AACA;AACA;AACA;AACA;AACA;AACApD,oBAAQC,IAAR,CAAa,gCAAb,EAA+CC,SAA/C;;AAEA,gBAAIkD,SAASC,IAAT,CAAcC,MAAd,KAAyB,GAA7B,EAAkC;AAC9B,qBAAKJ,MAAL,CAAYE,SAASC,IAAT,CAAcE,MAA1B;;AAEA,oBAAI,KAAKhD,OAAT,EAAkB;AACd,wBAAIiD,QAAQ,IAAI1E,KAAJ,CAAU;AAClB2E,2BAAGL,SAASC,IAAT,CAAcE,MAAd,CAAqBG,QAArB,CAA8BD,CADf;AAElBE,2BAAGP,SAASC,IAAT,CAAcE,MAAd,CAAqBG,QAArB,CAA8BC,CAFf;AAGlB/C,0CAAkB,EAACf,MAAM,KAAKA,IAAZ;AAHA,qBAAV,CAAZ;;AAMA,wBAAI,KAAKU,OAAL,CAAaqD,IAAb,GAAoB,CAAC,CAAzB,EAA4B;AACxB,6BAAKrD,OAAL,CAAasD,IAAb,CAAkB;AACdC,oCAAQN,KADM;AAEdI,kCAAM,KAAKjE;AAFG,yBAAlB;AAIH,qBALD,MAKO;AACH,6BAAKY,OAAL,CAAasD,IAAb,CAAkB;AACdC,oCAAQN,KADM;AAEdO,mCAAO,KAAKxD,OAAL,CAAawD,KAAb,GAAqB,KAAKpE;AAFnB,yBAAlB;AAIH;;AAED,wBAAIH,SAAS,IAAIN,kBAAJ,CAAuB;AAChCuB,+BAAO,SADyB;AAEhCC,+BAAO,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ;AAFyB,qBAAvB,CAAb;AAIA,yBAAKhB,QAAL,GAAgB,IAAIV,OAAJ,CAAY;AACxBgF,kCAAUR,KADc;AAExBhE,gCAAQA;AACR;AAHwB,qBAAZ,CAAhB;AAKA,yBAAKC,aAAL,CAAmBuB,GAAnB,CAAuB,KAAKtB,QAA5B;AACH;;AAED,qBAAK2B,KAAL;;AAEA5C,sBAAM6C,OAAN,CAAc,+BAAd,EAA+C,CAAC8B,SAASC,IAAT,CAAcE,MAAf,CAA/C;AACH,aArCD,MAqCO;AACH,qBAAKU,QAAL;AACH;AACJ,SA5N0C;AA6N3CA,kBAAU,kBAAUC,GAAV,EAAe;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlE,oBAAQC,IAAR,CAAa,iCAAb,EAAgDC,SAAhD;;AAEA9B,qBAAS4C,GAAT,CAAa,KAAKmD,QAAL,CAAclB,aAA3B,EAA0C,WAA1C;;AAEA;AACA,iBAAK5B,KAAL;;AAEA5C,kBAAM6C,OAAN,CAAc,oCAAd,EAAoD,CAAC4C,GAAD,CAApD;AACH;AA9O0C,KAAxC,CAAP;AAgPH,CA9SD","file":"FindAddress.js","sourcesContent":["define([\n    'dijit/_TemplatedMixin',\n    'dijit/_WidgetBase',\n\n    'dojo/dom-class',\n    'dojo/on',\n    'dojo/query',\n    'dojo/string',\n    'dojo/text!./resources/templates/FindAddress.html',\n    'dojo/topic',\n    'dojo/_base/array',\n    'dojo/_base/declare',\n    'dojo/_base/lang',\n\n    'esri/config',\n    'esri/geometry/Point',\n    'esri/geometry/SpatialReference',\n    'esri/Graphic',\n    'esri/request',\n    'esri/symbols/SimpleMarkerSymbol'\n], function (\n    _TemplatedMixin,\n    _WidgetBase,\n\n    domClass,\n    on,\n    query,\n    dojoString,\n    template,\n    topic,\n    array,\n    declare,\n    lang,\n\n    esriConfig,\n    Point,\n    SpatialReference,\n    Graphic,\n    esriRequest,\n    SimpleMarkerSymbol\n) {\n    // description:\n    //      A simple form tied to the map allowing a user to quickly zoom to an address.\n    //      **Published Topics**:\n    //      </p>\n    //      <ul>\n    //          <li>dart-board.FindAddress.OnFindStart[none]</li>\n    //          <li>dart-board.FindAddress.OnFind[result]</li>\n    //          <li>dart-board.FindAddress.OnFindError[err]</li>\n    //      </ul>\n    //      **Exceptions**:\n    //      </p>\n    //      <ul><li>none</li></ul>\n    //      <p>\n    //      **Required Files**:\n    //      </p>\n    //      <ul><li>resources/FindAddress.css</li></ul>\n    //\n    // example:\n    // |    new FindAddress({mapView: mapView}, 'test1');\n    var defaultSpatialReference = 3857;\n\n    return declare([_WidgetBase, _TemplatedMixin], {\n        templateString: template,\n        baseClass: 'find-address',\n        map: null,\n        title: 'Find Street Address',\n        symbol: null,\n        graphicsLayer: null,\n        _graphic: null,\n        zoomLevel: 12,\n        apiKey: null,\n        wkid: null,\n\n        // inline: Boolean (optional)\n        //      Controls if form is inline or normal (default) layout\n        inline: null,\n\n        constructor: function () {\n            // summary:\n            //      first function to fire after page loads\n            console.info('dart-board.FindAddress:constructor', arguments);\n\n            esriConfig.request.corsEnabledServers.push('api.mapserv.utah.gov');\n        },\n        postMixInProperties: function () {\n            // summary:\n            //      postMixin properties like symbol and graphics layer\n            // description:\n            //      decide whether to use default graphics layer and symbol\n            // tags:\n            //      public\n            console.info('dart-board.FindAddress:postMixInProperties', arguments);\n\n            if (this.mapView) {\n                // default to use the map's graphics layer if none was passed in\n                if (!this.graphicsLayer) {\n                    this.graphicsLayer = this.mapView.graphics;\n                }\n\n                // create symbol if none was provided in options\n                if (!this.symbol) {\n                    this.symbol = new SimpleMarkerSymbol({\n                        style: 'diamond',\n                        color: [255, 0, 0, 0.5]\n                    });\n                }\n\n                this.mapView.when(() => {\n                    if (!this.wkid) {\n                        this.wkid = (this.mapView) ? this.mapView.spatialReference.wkid : defaultSpatialReference;\n                    }\n                });\n            } else {\n                if (!this.wkid) {\n                    this.wkid = defaultSpatialReference;\n                }\n            }\n        },\n        postCreate: function () {\n            console.info('dart-board.FindAddress:postCreate', arguments);\n\n            this.formGeocode.onsubmit = function () {\n                return false;\n            };\n\n            if (this.inline) {\n                domClass.add(this.formGeocode, 'form-inline');\n            }\n\n            on(this.btnGeocode, 'click', lang.hitch(this, 'geocodeAddress'));\n        },\n        geocodeAddress: function () {\n            // summary:\n            //      Geocodes the address if the text boxes validate.\n            console.info('dart-board.FindAddress:geocodeAddress', arguments);\n\n            if (!this._validate()) {\n                this._done();\n                return false;\n            }\n\n            topic.publish('dart-board.FindAddress.OnFindStart');\n\n            this._geocoding();\n\n            if (this.mapView && this._graphic) {\n                this.graphicsLayer.remove(this._graphic);\n            }\n\n            var address = this.txtAddress.value;\n            var zone = this.txtZone.value;\n\n            if (this.request) {\n                this.request.cancel('duplicate in flight');\n                this.request = null;\n            }\n\n            this.request = this._invokeWebService({\n                street: address,\n                zone: zone\n            }).then(\n                lang.hitch(this, '_onFind'), lang.hitch(this, '_onError')\n            );\n\n            return false;\n        },\n        _invokeWebService: function (geocode) {\n            // summary:\n            //      calls the web service\n            // description:\n            //      sends the request to the wsut webservice\n            // tags:\n            //      private\n            // returns:\n            //     Deferred\n            console.info('dart-board.FindAddress:_invokeWebService', arguments);\n\n            var url = `//api.mapserv.utah.gov/api/v1/Geocode/${geocode.street}/${geocode.zone}`;\n\n            var options = {\n                apiKey: this.apiKey,\n                spatialReference: this.wkid\n            };\n\n            return esriRequest(url, {\n                query: options,\n                handleAs: 'json'\n            });\n        },\n        _validate: function () {\n            // summary:\n            //      validates the widget\n            // description:\n            //      makes sure the street and zone have valid data\n            // tags:\n            //      private\n            // returns:\n            //      bool\n            console.info('dart-board.FindAddress:_validate', arguments);\n\n            var that = this;\n\n            // hide error messages\n            query('.form-group', this.domNode).removeClass('has-error');\n\n            return array.every([this.txtAddress, this.txtZone], function (tb) {\n                return that._isValid(tb);\n            });\n        },\n        _isValid: function (textBox) {\n            // summary:\n            //      validates that there are values in the textbox\n            // textBox: TextBox Element\n            console.log('dart-board.FindAddress:_isValid', arguments);\n\n            var valid = dojoString.trim(textBox.value).length > 0;\n\n            if (!valid) {\n                domClass.add(textBox.parentElement, 'has-error');\n            }\n\n            return valid;\n        },\n        _geocoding: function () {\n\n        },\n        _done: function () {\n\n        },\n        onFind: function () {\n\n        },\n        _onFind: function (response) {\n            // summary:\n            //      handles a successful geocode\n            // description:\n            //      zooms the map if there is one. publishes the result\n            // tags:\n            //      private\n            console.info('dart-board.FindAddress:_onFind', arguments);\n\n            if (response.data.status === 200) {\n                this.onFind(response.data.result);\n\n                if (this.mapView) {\n                    var point = new Point({\n                        x: response.data.result.location.x,\n                        y: response.data.result.location.y,\n                        spatialReference: {wkid: this.wkid}\n                    });\n\n                    if (this.mapView.zoom > -1) {\n                        this.mapView.goTo({\n                            target: point,\n                            zoom: this.zoomLevel\n                        });\n                    } else {\n                        this.mapView.goTo({\n                            target: point,\n                            scale: this.mapView.scale / this.zoomLevel\n                        });\n                    }\n\n                    var symbol = new SimpleMarkerSymbol({\n                        style: 'diamond',\n                        color: [255, 0, 0, 0.5]\n                    });\n                    this._graphic = new Graphic({\n                        geometry: point,\n                        symbol: symbol\n                        // attributes: response.data.result\n                    });\n                    this.graphicsLayer.add(this._graphic);\n                }\n\n                this._done();\n\n                topic.publish('dart-board.FindAddress.OnFind', [response.data.result]);\n            } else {\n                this._onError();\n            }\n        },\n        _onError: function (err) {\n            // summary:\n            //      handles script io geocoding error\n            // description:\n            //      publishes error\n            // tags:\n            //      private\n            // returns:\n            //\n            console.info('dart-board.FindAddress:_onError', arguments);\n\n            domClass.add(this.errorMsg.parentElement, 'has-error');\n\n            // re-enable find button\n            this._done();\n\n            topic.publish('dart-board.FindAddress.OnFindError', [err]);\n        }\n    });\n});\n"]}