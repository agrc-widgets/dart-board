{"version":3,"sources":["_src/FindRouteMilepost.js"],"names":["define","template","declare","lang","Color","domClass","string","dojoScript","when","query","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","GraphicsLayer","SimpleMarkerSymbol","Graphic","Point","scaleUtils","widgetsInTemplate","templateString","baseClass","xhrTimeout","zoomLevel","map","graphicsLayer","symbol","apiKey","inline","constructor","console","log","arguments","postMixInProperties","addLayer","setStyle","STYLE_DIAMOND","setColor","wkid","spatialReference","postCreate","wireEvents","form","onsubmit","add","connect","findBtn","_onFindClick","clear","_validate","_invokeWebService","domNode","removeClass","validate","textBox","trim","value","parentElement","routeTxt","milepostTxt","that","url","params","substitute","milepost","route","key","sr","handleAs","timeout","preventCache","callbackParamName","def","get","response","status","_onXHRFailure","reject","_onXHRSuccess","result","noZoom","graphic","location","onFind","pnt","x","y","getLevel","centerAndZoom","getScale","errorMsg"],"mappings":"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","file":"FindRouteMilepost.js","sourcesContent":["define([\n    'dojo/text!agrc/widgets/locate/templates/FindRouteMilepost.html',\n\n    'dojo/_base/declare',\n    'dojo/_base/lang',\n    'dojo/_base/Color',\n\n    'dojo/dom-class',\n\n    'dojo/string',\n    'dojo/io/script',\n    'dojo/when',\n    'dojo/query',\n\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dijit/_WidgetsInTemplateMixin',\n\n    'esri/layers/GraphicsLayer',\n    'esri/symbols/SimpleMarkerSymbol',\n    'esri/graphic',\n    'esri/geometry/Point',\n    'esri/geometry/scaleUtils'\n], function (\n    template,\n\n    declare,\n    lang,\n    Color,\n\n    domClass,\n\n    string,\n    dojoScript,\n    when,\n    query,\n\n    _WidgetBase,\n    _TemplatedMixin,\n    _WidgetsInTemplateMixin,\n\n    GraphicsLayer,\n    SimpleMarkerSymbol,\n    Graphic,\n    Point,\n    scaleUtils\n) {\n    return declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\n        widgetsInTemplate: false,\n        templateString: template,\n        baseClass: 'find-route-milepost',\n\n        // xhrTimeout: Number\n        //      Amount of time that the xhr request waits before giving up\n        //      This should be dramatically shortened or removed all together\n        //      after upgrading to the new web api since it will fail immediately\n        xhrTimeout: 5000,\n\n        // zoomLevel: Number\n        //      The default zoom level that the map is zoomed to upon successfully\n        //      finding a route and milepost\n        zoomLevel: 6,\n\n        // parameters passed in via the constructor\n\n\n        // map: esri.Map [optional]\n        //      The associated map that will be auto-zoomed to the found point\n        map: null,\n\n        // graphicsLayer: esri.layers.GraphicsLayer [optional]\n        //      The graphics layer that the widget will place the found point in\n        graphicsLayer: null,\n\n        // symbol: esri.symbol.SimpleMarkerSymbol [optional]\n        //      The symbol used for the found graphic\n        symbol: null,\n\n        //apiKey: string\n        //      Register for your api key at developer.mapserv.utah.gov\n        apiKey: null,\n\n        // inline: Boolean (optional)\n        //      Controls if the form is inline or normal (default) layout\n        inline: null,\n\n        constructor: function () {\n            console.log('agrc.widgets.locate.FindRouteMilepost::constructor', arguments);\n        },\n        postMixInProperties: function () {\n            // summary:\n            //      description\n            console.log('agrc.widgets.locate.FindRouteMilepost::postMixinProperties', arguments);\n\n            if (this.map && !this.graphicsLayer) {\n                this.graphicsLayer = new GraphicsLayer();\n                this.map.addLayer(this.graphicsLayer);\n            }\n\n            // create symbol if none was provided in options\n            if (!this.symbol && this.map) {\n                this.symbol = new SimpleMarkerSymbol();\n                this.symbol.setStyle(SimpleMarkerSymbol.STYLE_DIAMOND);\n                this.symbol.setColor(new Color([255, 0, 0, 0.5]));\n            }\n\n            if (!this.wkid) {\n                this.wkid = (this.map) ? this.map.spatialReference.wkid : 26912;\n            }\n        },\n        postCreate: function () {\n            // summary:\n            //      dom is ready\n            console.log('agrc.widgets.locate.FindRouteMilepost::postCreate', arguments);\n\n            this.wireEvents();\n\n            this.form.onsubmit = function () {\n                return false;\n            };\n\n            if (this.inline) {\n                domClass.add(this.form, 'form-inline');\n            }\n        },\n        wireEvents: function () {\n            // summary:\n            //      wires the events for the widget\n            console.log('agrc.widgets.locate.FindRouteMilepost::wireEvents', arguments);\n\n            this.connect(this.findBtn, 'click', '_onFindClick');\n        },\n        _onFindClick: function () {\n            // summary:\n            //      description\n            console.log('agrc.widgets.locate.FindRouteMilepost::_onFindClick', arguments);\n\n            if (this.graphicsLayer) {\n                this.graphicsLayer.clear();\n            }\n\n            if (this._validate()) {\n                return this._invokeWebService();\n            }\n        },\n        _validate: function () {\n            // summary:\n            //      validates the values in the text boxes\n            // returns: Boolean\n            console.log('agrc.widgets.locate.FindRouteMilepost::_validate', arguments);\n\n            // hide error messages\n            query('.form-group', this.domNode).removeClass('has-error');\n\n            function validate(textBox) {\n                if (lang.trim(textBox.value) === '') {\n                    domClass.add(textBox.parentElement, 'has-error');\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            if (!validate(this.routeTxt)) {\n                return false;\n            } else if (!validate(this.milepostTxt)) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        _invokeWebService: function () {\n            // summary:\n            //      description\n            // returned: Deferred\n            console.log('agrc.widgets.locate.FindRouteMilepost::_invokeWebService', arguments);\n            var that = this;\n\n            var url = '//api.mapserv.utah.gov/api/v1/geocode/milepost/${route}/${milepost}?' +\n                'apiKey=${key}&spatialReference=${sr}';\n            var params = {\n                url: string.substitute(url, {\n                    milepost: this.milepostTxt.value,\n                    route: this.routeTxt.value,\n                    key: this.apiKey,\n                    sr: this.wkid\n                }),\n                handleAs: 'json',\n                timeout: this.xhrTimeout,\n                preventCache: true,\n                callbackParamName: 'callback'\n            };\n            var def = dojoScript.get(params);\n\n            when(def, function (response) {\n                if (response.status !== 200) {\n                    that._onXHRFailure();\n                    def.reject();\n                }\n                that._onXHRSuccess(response);\n            }, function (/*er*/) {\n                that._onXHRFailure();\n            });\n\n            return def;\n        },\n        _onXHRSuccess: function (result, noZoom) {\n            // summary:\n            //      callback for service\n            // result: {}\n            console.log('agrc.widgets.locate.FindRouteMilepost::_onXHRSuccess', arguments);\n\n            var graphic;\n\n            // TODO: check for server error after upgrading to new web api\n            var location = result.result.location;\n            this.onFind(location);\n\n            if (this.map) {\n                var pnt = new Point(result.result.location.x, result.result.location.y, this.map.spatialReference);\n\n                if (!noZoom) {\n                    if (this.map.getLevel() > -1) {\n                        this.map.centerAndZoom(pnt, this.zoomLevel);\n                    } else {\n                        this.map.centerAndZoom(pnt, scaleUtils.getScale(this.map) / this.zoomLevel);\n                    }\n                }\n\n                graphic = new Graphic(pnt, this.symbol);\n                this.graphicsLayer.add(graphic);\n            }\n        },\n        _onXHRFailure: function () {\n            // summary:\n            //      description\n            console.log('agrc.widgets.locate.FindRouteMilepost::_onXHRFailure', arguments);\n\n            domClass.add(this.errorMsg.parentElement, 'has-error');\n        },\n        onFind: function (/*result*/) {\n            // summary:\n            //      Event that fires when the service successfully returns a point\n            // result: {}\n            console.log('agrc.widgets.locate.FindRouteMilepost::onFind', arguments);\n        }\n    });\n});\n"]}